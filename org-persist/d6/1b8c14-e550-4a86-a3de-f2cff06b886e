;;   -*- mode: lisp-data; -*-
(((elisp org-element--headline-cache) . #s(avl-tree- [[nil [nil nil #7=(headline (:standard-properties [389 389 467 556 556 0 #1=(:title) nil element t nil 535 554 1 nil nil nil #2=(org-data (:standard-properties [1 1 1 556 556 0 nil org-data nil t nil 3 556 nil nil nil nil nil] :path "e:/Org/TODO.org" :CATEGORY "TODO"))] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (2 73) t] :title #3=[org-element-deferred org-element-property-2 (:raw-value) nil] :level 1 :priority nil :tags ("t3") :todo-keyword nil :todo-type nil :footnote-section-p #4=[org-element-deferred org-element--headline-footnote-section-p nil nil] :archivedp #5=[org-element-deferred org-element--headline-archivedp nil nil] :commentedp nil :scheduled (timestamp (:standard-properties [478 nil nil nil 499 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-07-31 周四 12:00>" :year-start 2025 :month-start 7 :day-start 31 :hour-start 12 :minute-start 0 :year-end 2025 :month-end 7 :day-end 31 :hour-end 12 :minute-end 0)) :EFFORT "30:00")) 0] #6=(headline (:standard-properties [1 1 79 389 389 0 #1# first-section element t nil 168 387 1 nil nil nil #2#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (2 73) t] :title #3# :level 1 :priority nil :tags ("t1") :todo-keyword nil :todo-type nil :footnote-section-p #4# :archivedp #5# :commentedp nil :scheduled (timestamp (:standard-properties [90 nil nil nil 111 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-01 周五 15:00>" :year-start 2025 :month-start 8 :day-start 1 :hour-start 15 :minute-start 0 :year-end 2025 :month-end 8 :day-end 1 :hour-end 15 :minute-end 0)) :RESET_CHECK_BOXES [org-element-deferred org-element--substring (144 145) t] :EFFORT "1:00")) 1] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[nil nil #2# 0] [[nil nil #8=(section (:standard-properties [79 79 79 389 389 0 nil section element t nil 79 389 nil nil nil nil #6#])) 0] [nil nil #7# 0] (planning (:standard-properties [79 79 nil nil 112 0 nil planning element t nil nil nil nil nil nil nil #8#] :closed nil :deadline nil :scheduled (timestamp (:standard-properties [90 nil nil nil 111 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-01 周五 15:00>" :year-start 2025 :month-start 8 :day-start 1 :hour-start 15 :minute-start 0 :year-end 2025 :month-end 8 :day-end 1 :hour-end 15 :minute-end 0)))) 0] #6# 1] [[[nil nil (planning (:standard-properties [467 467 nil nil 500 0 nil planning element t nil nil nil nil nil nil nil #9=(section (:standard-properties [467 467 467 556 556 0 nil section element t nil 467 556 nil nil nil nil #7#]))] :closed nil :deadline nil :scheduled (timestamp (:standard-properties [478 nil nil nil 499 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-07-31 周四 12:00>" :year-start 2025 :month-start 7 :day-start 31 :hour-start 12 :minute-start 0 :year-end 2025 :month-end 7 :day-end 31 :hour-end 12 :minute-end 0)))) 0] [nil nil (paragraph (:standard-properties [536 536 536 546 546 0 nil nil element t nil nil nil nil nil nil nil #9#])) 0] (property-drawer (:standard-properties [500 500 513 530 536 0 nil property-drawer element t nil nil nil nil nil nil nil #9#])) 0] [nil [nil nil (paragraph (:standard-properties [552 552 552 556 556 0 nil nil element t nil nil nil nil nil nil nil #11=(item (:standard-properties [546 546 552 556 556 0 (:tag) item element t nil nil nil nil nil nil #10=((546 0 "- " nil "[ ]" nil 556)) #12=(plain-list (:standard-properties [546 546 546 556 556 0 nil nil element t nil nil nil nil nil nil #10# #9#] :type unordered))] :bullet "- " :checkbox off :counter nil :pre-blank 0 :tag nil))])) 0] #11# 1] #12# 0] #9# 0] nil nil 0] org-element--cache-compare)) ((version "2.3")))