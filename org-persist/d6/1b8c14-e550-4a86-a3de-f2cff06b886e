;;   -*- mode: lisp-data; -*-
(((elisp org-element--headline-cache) . #s(avl-tree- [[[[nil nil #5=(headline (:standard-properties [9 9 15 208 208 0 #2=(:title) nil element t nil 17 208 1 nil #3=[org-element-deferred org-element--headline-deferred nil t] nil #4=(org-data (:standard-properties [1 1 1 434 434 0 nil org-data nil t nil 3 434 nil nil [org-element-deferred org-element--get-global-node-properties nil t] nil nil] :path "e:/Org/TODO.org" :fragile-cache nil))] :pre-blank 0 :raw-value #1=[org-element-deferred org-element--headline-parse-title (t) t] :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1#)) 0] [nil nil #7=(headline (:standard-properties [208 208 214 306 306 0 #2# nil element t nil 216 306 1 nil #3# nil #4#] :pre-blank 0 :raw-value #1# :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1# :fragile-cache nil)) 0] #9=(headline (:standard-properties [15 15 40 208 208 0 #2# section element t nil 42 208 2 nil #3# nil #5#] :pre-blank 0 :raw-value #1# :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1#)) 0] [[nil nil #6=(headline (:standard-properties [306 306 312 434 434 0 #2# nil element t nil 314 434 1 nil #3# nil #4#] :pre-blank 0 :raw-value #1# :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1#)) 0] nil #17=(headline (:standard-properties [312 312 325 434 434 0 #2# section element t nil 384 432 2 nil nil nil #6#] :pre-blank 0 :raw-value #1# :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1# :deadline (timestamp (:standard-properties [335 nil nil nil 357 1 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-04 周一 17:30>" :year-start 2025 :month-start 8 :day-start 4 :hour-start 17 :minute-start 30 :year-end 2025 :month-end 8 :day-end 4 :hour-end 17 :minute-end 30)) :scheduled (timestamp (:standard-properties [368 nil nil nil 383 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-04 周一>" :year-start 2025 :month-start 8 :day-start 4 :hour-start nil :minute-start nil :year-end 2025 :month-end 8 :day-end 4 :hour-end nil :minute-end nil)))) -1] #12=(headline (:standard-properties [214 214 227 306 306 0 #2# section element t nil 254 304 2 nil nil nil #7#] :pre-blank 0 :raw-value #1# :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1# :scheduled (timestamp (:standard-properties [238 nil nil nil 253 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-03 周日>" :year-start 2025 :month-start 8 :day-start 3 :hour-start nil :minute-start nil :year-end 2025 :month-end 8 :day-end 3 :hour-end nil :minute-end nil)) :fragile-cache nil)) 0] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[[nil nil #4# 0] [nil nil (paragraph (:standard-properties [1 1 1 8 9 1 nil top-comment element t nil nil nil nil nil nil nil #8=(section (:standard-properties [1 1 1 9 9 0 nil first-section element t nil 1 9 nil nil nil nil #4#]))])) 0] #8# 0] [[nil nil #9# 0] [nil nil (planning (:standard-properties [40 40 nil nil 129 0 nil planning element t nil nil nil nil nil nil nil #10=(section (:standard-properties [40 40 40 208 208 0 nil section element t nil 40 208 nil nil nil nil #9#]))] :closed (timestamp (:standard-properties [48 nil nil nil 70 1 nil nil nil nil nil nil nil nil nil nil nil nil] :type inactive :range-type nil :raw-value "[2025-08-01 周五 21:34]" :year-start 2025 :month-start 8 :day-start 1 :hour-start 21 :minute-start 34 :year-end 2025 :month-end 8 :day-end 1 :hour-end 21 :minute-end 34)) :deadline (timestamp (:standard-properties [113 nil nil nil 128 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-01 周五>" :year-start 2025 :month-start 8 :day-start 1 :hour-start nil :minute-start nil :year-end 2025 :month-end 8 :day-end 1 :hour-end nil :minute-end nil)) :scheduled (timestamp (:standard-properties [81 nil nil nil 103 1 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-01 周五 17:30>" :year-start 2025 :month-start 8 :day-start 1 :hour-start 17 :minute-start 30 :year-end 2025 :month-end 8 :day-end 1 :hour-end 17 :minute-end 30)))) 0] #10# 0] #5# 0] [[nil nil (plain-list (:standard-properties [139 139 139 200 200 0 nil nil element t nil nil nil nil nil nil ((139 0 "- " nil nil nil 200)) #11=(drawer (:standard-properties [129 129 139 200 208 2 nil property-drawer element t nil nil nil nil nil nil nil #10#] :drawer-name "LOGBOOK"))] :type unordered)) 0] nil #7# -1] #11# -1] [[[[nil nil #13=(section (:standard-properties [227 227 227 306 306 0 nil section element t nil 227 306 nil nil nil nil #12#])) 0] [nil nil #15=(plain-list (:standard-properties [254 254 254 302 306 2 nil property-drawer element t nil nil nil nil nil nil #14=((254 0 "- " nil nil nil 272) (272 0 "- " nil nil nil 289) (289 0 "- " nil nil nil 302)) #13#] :type unordered)) 0] (planning (:standard-properties [227 227 nil nil 254 0 nil planning element t nil nil nil nil nil nil nil #13#] :closed nil :deadline nil :scheduled (timestamp (:standard-properties [238 nil nil nil 253 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-03 周日>" :year-start 2025 :month-start 8 :day-start 3 :hour-start nil :minute-start nil :year-end 2025 :month-end 8 :day-end 3 :hour-end nil :minute-end nil)))) 0] [[nil nil (paragraph (:standard-properties [256 256 256 272 272 0 nil nil element t nil nil nil nil nil nil nil #16=(item (:standard-properties [254 254 256 272 272 0 #19=(:tag) item element t nil nil nil nil nil nil #14# #15#] :bullet #21="- " :checkbox nil :counter nil :pre-blank 0 :tag nil))])) 0] nil #6# -1] #16# 0] [[nil [nil nil (planning (:standard-properties [325 325 nil nil 384 0 nil planning element t nil nil nil nil nil nil nil #18=(section (:standard-properties [325 325 325 434 434 0 nil section element t nil 325 434 nil nil nil nil #17#]))] :closed nil :deadline (timestamp (:standard-properties [335 nil nil nil 357 1 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-04 周一 17:30>" :year-start 2025 :month-start 8 :day-start 4 :hour-start 17 :minute-start 30 :year-end 2025 :month-end 8 :day-end 4 :hour-end 17 :minute-end 30)) :scheduled (timestamp (:standard-properties [368 nil nil nil 383 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-04 周一>" :year-start 2025 :month-start 8 :day-start 4 :hour-start nil :minute-start nil :year-end 2025 :month-end 8 :day-end 4 :hour-end nil :minute-end nil)))) 0] #18# 1] [[nil nil (item (:standard-properties [384 384 386 395 395 0 #19# item element t nil nil nil nil nil nil #20=((384 0 "- " nil nil nil 395) (395 0 "- " nil nil nil 414) (414 0 "- " nil nil nil 433)) #22=(plain-list (:standard-properties [384 384 384 433 434 1 nil property-drawer element t nil nil nil nil nil nil #20# #18#] :type unordered))] :bullet #21# :checkbox nil :counter nil :pre-blank 0 :tag nil)) 0] [nil nil (item (:standard-properties [414 414 416 433 433 0 #19# item element t nil nil nil nil nil nil #20# #22#] :bullet #21# :checkbox nil :counter nil :pre-blank 0 :tag nil)) 0] (item (:standard-properties [395 395 397 414 414 0 #19# item element t nil nil nil nil nil nil #20# #22#] :bullet #21# :checkbox nil :counter nil :pre-blank 0 :tag nil)) 0] #22# 0] #17# 0] #12# 0] nil nil 0] org-element--cache-compare)) ((version "2.3")))