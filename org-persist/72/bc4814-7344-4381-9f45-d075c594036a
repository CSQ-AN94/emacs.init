;;   -*- mode: lisp-data; -*-
(((elisp org-element--headline-cache) . #s(avl-tree- [[[nil nil #8=(headline (:standard-properties [1 1 15 25 25 0 #2=(:title) first-section element t nil 17 25 1 nil [org-element-deferred org-element--headline-deferred nil t] nil #3=(org-data (:standard-properties [1 1 1 454 454 0 nil org-data nil t nil 3 454 nil nil nil nil nil] :path "f:/ORG-mode/test.org" :CATEGORY "test" :fragile-cache nil))] :pre-blank 1 :raw-value #1=[org-element-deferred org-element--headline-parse-title (t) t] :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1#)) 0] [nil nil #9=(headline (:standard-properties [370 370 383 454 454 0 #2# nil nil t nil 436 452 1 nil nil nil #3#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (7 12) t] :title #4=[org-element-deferred org-element-property-2 (:raw-value) nil] :level 1 :priority nil :tags nil :todo-keyword "TODO" :todo-type todo :footnote-section-p #5=[org-element-deferred org-element--headline-footnote-section-p nil nil] :archivedp #6=[org-element-deferred org-element--headline-archivedp nil nil] :commentedp nil :deadline (timestamp (:standard-properties [393 nil nil nil 409 1 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-05 周二>" :year-start 2025 :month-start 8 :day-start 5 :hour-start nil :minute-start nil :year-end 2025 :month-end 8 :day-end 5 :hour-end nil :minute-end nil)) :scheduled (timestamp (:standard-properties [420 nil nil nil 435 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-01 周五>" :year-start 2025 :month-start 8 :day-start 1 :hour-start nil :minute-start nil :year-end 2025 :month-end 8 :day-end 1 :hour-end nil :minute-end nil)))) 0] #7=(headline (:standard-properties [25 25 47 370 370 0 #2# nil element t nil 150 368 1 nil nil nil #3#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (2 21) t] :title #4# :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #5# :archivedp #6# :commentedp nil :closed (timestamp (:standard-properties [55 nil nil nil 77 1 nil nil nil nil nil nil nil nil nil nil nil nil] :type inactive :range-type nil :raw-value "[2025-09-31 周四 10:00]" :year-start 2025 :month-start 9 :day-start 31 :hour-start 10 :minute-start 0 :year-end 2025 :month-end 9 :day-end 31 :hour-end 10 :minute-end 0)) :scheduled (timestamp (:standard-properties [88 nil nil nil 109 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-02 周四 12:00>" :year-start 2025 :month-start 8 :day-start 2 :hour-start 12 :minute-start 0 :year-end 2025 :month-end 8 :day-end 2 :hour-end 12 :minute-end 0)) :RESET_CHECK_BOXES [org-element-deferred org-element--substring (118 119) t])) 0] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[nil nil #3# 0] [nil nil #7# 0] #8# 0] [[nil nil (planning (:standard-properties [47 47 nil nil 110 0 nil planning element t nil nil nil nil nil nil nil #10=(section (:standard-properties [47 47 47 370 370 0 nil section element t nil 47 370 nil nil nil nil #7#]))] :closed (timestamp (:standard-properties [55 nil nil nil 77 1 nil nil nil nil nil nil nil nil nil nil nil nil] :type inactive :range-type nil :raw-value "[2025-09-31 周四 10:00]" :year-start 2025 :month-start 9 :day-start 31 :hour-start 10 :minute-start 0 :year-end 2025 :month-end 9 :day-end 31 :hour-end 10 :minute-end 0)) :deadline nil :scheduled (timestamp (:standard-properties [88 nil nil nil 109 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-02 周四 12:00>" :year-start 2025 :month-start 8 :day-start 2 :hour-start 12 :minute-start 0 :year-end 2025 :month-end 8 :day-end 2 :hour-end 12 :minute-end 0)))) 0] [nil nil #11=(section (:standard-properties [383 383 383 454 454 0 nil section element t nil 383 454 nil nil nil nil #9#])) 0] #9# 0] #10# 0] [[nil nil #13=(plain-list (:standard-properties [436 436 436 454 454 0 nil property-drawer element t nil nil nil nil nil nil #12=((436 0 "- " nil "[ ]" nil 445) (445 0 "- " nil "[ ]" nil 454)) #11#] :type unordered)) 0] [nil [nil nil (paragraph (:standard-properties [451 451 451 454 454 0 nil nil element t nil nil nil nil nil nil nil #14=(item (:standard-properties [445 445 451 454 454 0 #15=(:tag) item element t nil nil nil nil nil nil #12# #13#] :bullet #16="- " :checkbox off :counter nil :pre-blank 0 :tag nil))])) 0] #14# 1] (item (:standard-properties [436 436 442 445 445 0 #15# item element t nil nil nil nil nil nil #12# #13#] :bullet #16# :checkbox off :counter nil :pre-blank 0 :tag nil)) 1] (planning (:standard-properties [383 383 nil nil 436 0 nil planning element t nil nil nil nil nil nil nil #11#] :closed nil :deadline (timestamp (:standard-properties [393 nil nil nil 409 1 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-05 周二>" :year-start 2025 :month-start 8 :day-start 5 :hour-start nil :minute-start nil :year-end 2025 :month-end 8 :day-end 5 :hour-end nil :minute-end nil)) :scheduled (timestamp (:standard-properties [420 nil nil nil 435 0 nil nil nil nil nil nil nil nil nil nil nil nil] :type active :range-type nil :raw-value "<2025-08-01 周五>" :year-start 2025 :month-start 8 :day-start 1 :hour-start nil :minute-start nil :year-end 2025 :month-end 8 :day-end 1 :hour-end nil :minute-end nil)))) 0] nil nil 0] org-element--cache-compare)) ((version "2.3")))